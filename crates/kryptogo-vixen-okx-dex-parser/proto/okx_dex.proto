//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!
syntax = "proto3";

package vixen.parser.okx_dex;

message ClaimIx {
	ClaimIxAccounts accounts = 1;
}

message CommissionSolProxySwapIx {
	CommissionSolProxySwapIxAccounts accounts = 1;
	CommissionSolProxySwapIxData data = 2;
}

message CommissionSolSwapIx {
	CommissionSolSwapIxAccounts accounts = 1;
	CommissionSolSwapIxData data = 2;
}

message CommissionSplProxySwapIx {
	CommissionSplProxySwapIxAccounts accounts = 1;
	CommissionSplProxySwapIxData data = 2;
}

message CommissionSplSwapIx {
	CommissionSplSwapIxAccounts accounts = 1;
	CommissionSplSwapIxData data = 2;
}

message CommissionWrapUnwrapIx {
	CommissionWrapUnwrapIxAccounts accounts = 1;
	CommissionWrapUnwrapIxData data = 2;
}

message CreateTokenAccountIx {
	CreateTokenAccountIxAccounts accounts = 1;
	CreateTokenAccountIxData data = 2;
}

message CreateTokenAccountWithSeedIx {
	CreateTokenAccountWithSeedIxAccounts accounts = 1;
	CreateTokenAccountWithSeedIxData data = 2;
}

message PlatformFeeSolProxySwapV2Ix {
	PlatformFeeSolProxySwapV2IxAccounts accounts = 1;
	PlatformFeeSolProxySwapV2IxData data = 2;
}

message PlatformFeeSolWrapUnwrapV2Ix {
	PlatformFeeSolWrapUnwrapV2IxAccounts accounts = 1;
	PlatformFeeSolWrapUnwrapV2IxData data = 2;
}

message PlatformFeeSplProxySwapV2Ix {
	PlatformFeeSplProxySwapV2IxAccounts accounts = 1;
	PlatformFeeSplProxySwapV2IxData data = 2;
}

message ProxySwapIx {
	ProxySwapIxAccounts accounts = 1;
	ProxySwapIxData data = 2;
}

message SwapIx {
	SwapIxAccounts accounts = 1;
	SwapIxData data = 2;
}

message SwapTobV3Ix {
	SwapTobV3IxAccounts accounts = 1;
	SwapTobV3IxData data = 2;
}

message SwapTobV3WithReceiverIx {
	SwapTobV3WithReceiverIxAccounts accounts = 1;
	SwapTobV3WithReceiverIxData data = 2;
}

message SwapV3Ix {
	SwapV3IxAccounts accounts = 1;
	SwapV3IxData data = 2;
}

message WrapUnwrapV3Ix {
	WrapUnwrapV3IxAccounts accounts = 1;
	WrapUnwrapV3IxData data = 2;
}

message RepeatedUint64Row {
	repeated uint64 rows = 1;
}


message AddResolverEvent {
	string resolver = 1;
}

message CancelOrderEvent {
	uint64 order_id = 1;
	string payer = 2;
	string maker = 3;
	uint64 update_ts = 4;
}

message CommissionSwapArgs {
	uint64 amount_in = 1;
	uint64 expect_amount_out = 2;
	uint64 min_return = 3;
	repeated uint64 amounts = 4;
	repeated Route routes = 5;
	uint32 commission_rate = 6;
	bool commission_direction = 7;
}

enum Dex {
	DexSplTokenSwap = 0;
	DexStableSwap = 1;
	DexWhirlpool = 2;
	DexMeteoraDynamicpool = 3;
	DexRaydiumSwap = 4;
	DexRaydiumStableSwap = 5;
	DexRaydiumClmmSwap = 6;
	DexAldrinExchangeV1 = 7;
	DexAldrinExchangeV2 = 8;
	DexLifinityV1 = 9;
	DexLifinityV2 = 10;
	DexRaydiumClmmSwapV2 = 11;
	DexFluxBeam = 12;
	DexMeteoraDlmm = 13;
	DexRaydiumCpmmSwap = 14;
	DexOpenBookV2 = 15;
	DexWhirlpoolV2 = 16;
	DexPhoenix = 17;
	DexObricV2 = 18;
	DexSanctumAddLiq = 19;
	DexSanctumRemoveLiq = 20;
	DexSanctumNonWsolSwap = 21;
	DexSanctumWsolSwap = 22;
	DexPumpfunBuy = 23;
	DexPumpfunSell = 24;
	DexStabbleSwap = 25;
	DexSanctumRouter = 26;
	DexMeteoraVaultDeposit = 27;
	DexMeteoraVaultWithdraw = 28;
	DexSaros = 29;
	DexMeteoraLst = 30;
	DexSolfi = 31;
	DexQualiaSwap = 32;
	DexZerofi = 33;
	DexPumpfunammBuy = 34;
	DexPumpfunammSell = 35;
	DexVirtuals = 36;
	DexVertigoBuy = 37;
	DexVertigoSell = 38;
	DexPerpetualsAddLiq = 39;
	DexPerpetualsRemoveLiq = 40;
	DexPerpetualsSwap = 41;
	DexRaydiumLaunchpad = 42;
	DexLetsBonkFun = 43;
	DexWoofi = 44;
	DexMeteoraDbc = 45;
	DexMeteoraDlmmSwap2 = 46;
	DexMeteoraDAMMV2 = 47;
	DexGavel = 48;
	DexBoopfunBuy = 49;
	DexBoopfunSell = 50;
	DexMeteoraDbc2 = 51;
	DexGooseFX = 52;
	DexDooar = 53;
	DexNumeraire = 54;
	DexSaberDecimalWrapperDeposit = 55;
	DexSaberDecimalWrapperWithdraw = 56;
	DexSarosDlmm = 57;
	DexOneDexSwap = 58;
	DexManifest = 59;
	DexByrealClmm = 60;
	DexPancakeSwapV3Swap = 61;
	DexPancakeSwapV3SwapV2 = 62;
	DexTessera = 63;
	DexSolRfq = 64;
	DexPumpfunBuy2 = 65;
	DexPumpfunammBuy2 = 66;
	DexHumidifi = 67;
	DexHeavenBuy = 68;
	DexHeavenSell = 69;
	DexSolfiV2 = 70;
	DexPumpfunBuy3 = 71;
	DexPumpfunSell3 = 72;
	DexPumpfunammBuy3 = 73;
	DexPumpfunammSell3 = 74;
	DexGoonfi = 75;
	DexMoonitBuy = 76;
	DexMoonitSell = 77;
	DexRaydiumSwapV2 = 78;
}

message FillOrderEvent {
	uint64 order_id = 1;
	string payer = 2;
	string maker = 3;
	string input_token_mint = 4;
	string output_token_mint = 5;
	uint64 making_amount = 6;
	uint64 taking_amount = 7;
	uint64 update_ts = 8;
}

message InitGlobalConfigEvent {
	string admin = 1;
	uint64 trade_fee = 2;
}

message PauseTradingEvent {
	bool paused = 1;
}

message PlaceOrderEvent {
	uint64 order_id = 1;
	string maker = 2;
	string input_token_mint = 3;
	string output_token_mint = 4;
	uint64 making_amount = 5;
	uint64 expect_taking_amount = 6;
	uint64 min_return_amount = 7;
	uint64 create_ts = 8;
	uint64 deadline = 9;
	uint64 trade_fee = 10;
}

message RefundEvent {
	uint64 order_id = 1;
	string maker = 2;
	string input_token_mint = 3;
	uint64 amount = 4;
}

message RemoveResolverEvent {
	string resolver = 1;
}

message Route {
	repeated Dex dexes = 1;
	repeated uint32 weights = 2;
}

message SetAdminEvent {
	string admin = 1;
}

message SetFeeMultiplierEvent {
	uint32 fee_multiplier = 1;
}

message SetTradeFeeEvent {
	uint64 trade_fee = 1;
}

message SwapArgs {
	uint64 amount_in = 1;
	uint64 expect_amount_out = 2;
	uint64 min_return = 3;
	repeated uint64 amounts = 4;
	repeated Route routes = 5;
}

message SwapEvent {
	Dex dex = 1;
	uint64 amount_in = 2;
	uint64 amount_out = 3;
}

message UpdateOrderEvent {
	uint64 order_id = 1;
	string maker = 2;
	uint64 expect_taking_amount = 3;
	uint64 min_return_amount = 4;
	uint64 deadline = 5;
	uint64 update_ts = 6;
	uint64 increase_fee = 7;
}



message ClaimIxAccounts {
	string signer = 1;
	string receiver = 2;
	optional string source_token_account = 3;
	optional string destination_token_account = 4;
	string sa_authority = 5;
	optional string token_mint = 6;
	optional string token_program = 7;
	string system_program = 8;
	optional string associated_token_program = 9;
}


message CommissionSolProxySwapIxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	string commission_account = 6;
	optional string sa_authority = 7;
	optional string source_token_sa = 8;
	optional string destination_token_sa = 9;
	optional string source_token_program = 10;
	optional string destination_token_program = 11;
	optional string associated_token_program = 12;
	optional string system_program = 13;
}

message CommissionSolProxySwapIxData {
	SwapArgs data = 1;
	uint32 commission_rate = 2;
	bool commission_direction = 3;
	uint64 order_id = 4;
}

message CommissionSolSwapIxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	string commission_account = 6;
	string system_program = 7;
}

message CommissionSolSwapIxData {
	CommissionSwapArgs data = 1;
	uint64 order_id = 2;
}

message CommissionSplProxySwapIxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	string commission_token_account = 6;
	optional string sa_authority = 7;
	optional string source_token_sa = 8;
	optional string destination_token_sa = 9;
	optional string source_token_program = 10;
	optional string destination_token_program = 11;
	optional string associated_token_program = 12;
	optional string system_program = 13;
}

message CommissionSplProxySwapIxData {
	SwapArgs data = 1;
	uint32 commission_rate = 2;
	bool commission_direction = 3;
	uint64 order_id = 4;
}

message CommissionSplSwapIxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	string commission_token_account = 6;
	string token_program = 7;
}

message CommissionSplSwapIxData {
	CommissionSwapArgs data = 1;
	uint64 order_id = 2;
}

message CommissionWrapUnwrapIxAccounts {
	string payer = 1;
	string payer_wsol_account = 2;
	string wsol_mint = 3;
	optional string temp_wsol_account = 4;
	string commission_sol_account = 5;
	string commission_wsol_account = 6;
	string system_program = 7;
	string token_program = 8;
}

message CommissionWrapUnwrapIxData {
	uint64 amount_in = 1;
	bool wrap_direction = 2;
	uint32 commission_rate = 3;
	bool commission_direction = 4;
	uint64 order_id = 5;
}

message CreateTokenAccountIxAccounts {
	string payer = 1;
	string owner = 2;
	string token_account = 3;
	string token_mint = 4;
	string token_program = 5;
	string system_program = 6;
}

message CreateTokenAccountIxData {
	uint32 bump = 1;
}

message CreateTokenAccountWithSeedIxAccounts {
	string payer = 1;
	string owner = 2;
	string token_account = 3;
	string token_mint = 4;
	string token_program = 5;
	string system_program = 6;
}

message CreateTokenAccountWithSeedIxData {
	uint32 bump = 1;
	uint32 seed = 2;
}

message PlatformFeeSolProxySwapV2IxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	string commission_account = 6;
	optional string sa_authority = 7;
	optional string source_token_sa = 8;
	optional string destination_token_sa = 9;
	optional string source_token_program = 10;
	optional string destination_token_program = 11;
	optional string associated_token_program = 12;
	optional string system_program = 13;
}

message PlatformFeeSolProxySwapV2IxData {
	SwapArgs args = 1;
	uint32 commission_info = 2;
	uint32 platform_fee_rate = 3;
	uint32 trim_rate = 4;
	uint64 order_id = 5;
}

message PlatformFeeSolWrapUnwrapV2IxAccounts {
	string payer = 1;
	string payer_wsol_account = 2;
	string wsol_mint = 3;
	optional string temp_wsol_account = 4;
	string commission_sol_account = 5;
	string commission_wsol_account = 6;
	optional string source_token_sa = 7;
	optional string destination_token_sa = 8;
	string system_program = 9;
	string token_program = 10;
}

message PlatformFeeSolWrapUnwrapV2IxData {
	uint64 amount_in = 1;
	uint32 commission_info = 2;
	uint32 platform_fee_rate = 3;
	uint64 order_id = 4;
}

message PlatformFeeSplProxySwapV2IxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	string commission_token_account = 6;
	optional string sa_authority = 7;
	optional string source_token_sa = 8;
	optional string destination_token_sa = 9;
	optional string source_token_program = 10;
	optional string destination_token_program = 11;
	optional string associated_token_program = 12;
	optional string system_program = 13;
}

message PlatformFeeSplProxySwapV2IxData {
	SwapArgs args = 1;
	uint32 commission_info = 2;
	uint32 platform_fee_rate = 3;
	uint32 trim_rate = 4;
	uint64 order_id = 5;
}

message ProxySwapIxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	optional string sa_authority = 6;
	optional string source_token_sa = 7;
	optional string destination_token_sa = 8;
	optional string source_token_program = 9;
	optional string destination_token_program = 10;
	optional string associated_token_program = 11;
	optional string system_program = 12;
}

message ProxySwapIxData {
	SwapArgs data = 1;
	uint64 order_id = 2;
}

message SwapIxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
}

message SwapIxData {
	SwapArgs data = 1;
	uint64 order_id = 2;
}

message SwapTobV3IxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	optional string commission_account = 6;
	optional string platform_fee_account = 7;
	optional string sa_authority = 8;
	optional string source_token_sa = 9;
	optional string destination_token_sa = 10;
	optional string source_token_program = 11;
	optional string destination_token_program = 12;
	optional string associated_token_program = 13;
	optional string system_program = 14;
}

message SwapTobV3IxData {
	SwapArgs args = 1;
	uint32 commission_info = 2;
	uint32 trim_rate = 3;
	uint32 platform_fee_rate = 4;
	uint64 order_id = 5;
}

message SwapTobV3WithReceiverIxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	optional string commission_account = 6;
	optional string platform_fee_account = 7;
	optional string sa_authority = 8;
	optional string source_token_sa = 9;
	optional string destination_token_sa = 10;
	optional string source_token_program = 11;
	optional string destination_token_program = 12;
	optional string associated_token_program = 13;
	optional string system_program = 14;
	optional string sol_receiver = 15;
}

message SwapTobV3WithReceiverIxData {
	SwapArgs args = 1;
	uint32 commission_info = 2;
	uint32 trim_rate = 3;
	uint32 platform_fee_rate = 4;
	uint64 order_id = 5;
}

message SwapV3IxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	optional string commission_account = 6;
	optional string platform_fee_account = 7;
	optional string sa_authority = 8;
	optional string source_token_sa = 9;
	optional string destination_token_sa = 10;
	optional string source_token_program = 11;
	optional string destination_token_program = 12;
	optional string associated_token_program = 13;
	optional string system_program = 14;
}

message SwapV3IxData {
	SwapArgs args = 1;
	uint32 commission_info = 2;
	uint32 platform_fee_rate = 3;
	uint64 order_id = 4;
}

message WrapUnwrapV3IxAccounts {
	string payer = 1;
	string payer_wsol_account = 2;
	string wsol_mint = 3;
	optional string temp_wsol_account = 4;
	optional string commission_account = 5;
	optional string platform_fee_account = 6;
	optional string authority_pda = 7;
	optional string wsol_sa = 8;
	string token_program = 9;
	string system_program = 10;
}

message WrapUnwrapV3IxData {
	uint64 order_id = 1;
	uint64 amount_in = 2;
	uint32 commission_info = 3;
	uint32 platform_fee_rate = 4;
	bool tob = 5;
}

// 移除 program state，因為生成之後也沒有值並且不需要 parse

message ProgramIxs {
    oneof ix_oneof {
        	ClaimIx claim = 1;
        	CommissionSolProxySwapIx commission_sol_proxy_swap = 2;
        	CommissionSolSwapIx commission_sol_swap = 3;
        	CommissionSplProxySwapIx commission_spl_proxy_swap = 4;
        	CommissionSplSwapIx commission_spl_swap = 5;
        	CommissionWrapUnwrapIx commission_wrap_unwrap = 6;
        	CreateTokenAccountIx create_token_account = 7;
        	CreateTokenAccountWithSeedIx create_token_account_with_seed = 8;
        	PlatformFeeSolProxySwapV2Ix platform_fee_sol_proxy_swap_v2 = 9;
        	PlatformFeeSolWrapUnwrapV2Ix platform_fee_sol_wrap_unwrap_v2 = 10;
        	PlatformFeeSplProxySwapV2Ix platform_fee_spl_proxy_swap_v2 = 11;
        	ProxySwapIx proxy_swap = 12;
        	SwapIx swap = 13;
        	SwapTobV3Ix swap_tob_v3 = 14;
        	SwapTobV3WithReceiverIx swap_tob_v3_with_receiver = 15;
        	SwapV3Ix swap_v3 = 16;
        	WrapUnwrapV3Ix wrap_unwrap_v3 = 17;
        }
}

