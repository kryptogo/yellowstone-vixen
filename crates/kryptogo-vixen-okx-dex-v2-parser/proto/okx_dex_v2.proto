//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!
syntax = "proto3";

package vixen.parser.okx_dex_v2;

message ClaimIx {
	ClaimIxAccounts accounts = 1;
}

message CreateTokenAccountIx {
	CreateTokenAccountIxAccounts accounts = 1;
	CreateTokenAccountIxData data = 2;
}

message CreateTokenAccountWithSeedIx {
	CreateTokenAccountWithSeedIxAccounts accounts = 1;
	CreateTokenAccountWithSeedIxData data = 2;
}

message ProxySwapIx {
	ProxySwapIxAccounts accounts = 1;
	ProxySwapIxData data = 2;
}

message SwapIx {
	SwapIxAccounts accounts = 1;
	SwapIxData data = 2;
}

message SwapTobIx {
	SwapTobIxAccounts accounts = 1;
	SwapTobIxData data = 2;
}

message SwapTobWithReceiverIx {
	SwapTobWithReceiverIxAccounts accounts = 1;
	SwapTobWithReceiverIxData data = 2;
}

message SwapTocIx {
	SwapTocIxAccounts accounts = 1;
	SwapTocIxData data = 2;
}

message WrapUnwrapIx {
	WrapUnwrapIxAccounts accounts = 1;
	WrapUnwrapIxData data = 2;
}


enum Dex {
	DexSplTokenSwap = 0;
	DexStableSwap = 1;
	DexWhirlpool = 2;
	DexMeteoraDynamicpool = 3;
	DexRaydiumSwap = 4;
	DexRaydiumStableSwap = 5;
	DexRaydiumClmmSwap = 6;
	DexAldrinExchangeV1 = 7;
	DexAldrinExchangeV2 = 8;
	DexLifinityV1 = 9;
	DexLifinityV2 = 10;
	DexRaydiumClmmSwapV2 = 11;
	DexFluxBeam = 12;
	DexMeteoraDlmm = 13;
	DexRaydiumCpmmSwap = 14;
	DexOpenBookV2 = 15;
	DexWhirlpoolV2 = 16;
	DexPhoenix = 17;
	DexObricV2 = 18;
	DexSanctumAddLiq = 19;
	DexSanctumRemoveLiq = 20;
	DexSanctumNonWsolSwap = 21;
	DexSanctumWsolSwap = 22;
	DexPumpfunBuy = 23;
	DexPumpfunSell = 24;
	DexStabbleSwap = 25;
	DexSanctumRouter = 26;
	DexMeteoraVaultDeposit = 27;
	DexMeteoraVaultWithdraw = 28;
	DexSaros = 29;
	DexMeteoraLst = 30;
	DexSolfi = 31;
	DexQualiaSwap = 32;
	DexZerofi = 33;
	DexPumpfunammBuy = 34;
	DexPumpfunammSell = 35;
	DexVirtuals = 36;
	DexVertigoBuy = 37;
	DexVertigoSell = 38;
	DexPerpetualsAddLiq = 39;
	DexPerpetualsRemoveLiq = 40;
	DexPerpetualsSwap = 41;
	DexRaydiumLaunchpad = 42;
	DexLetsBonkFun = 43;
	DexWoofi = 44;
	DexMeteoraDbc = 45;
	DexMeteoraDlmmSwap2 = 46;
	DexMeteoraDAMMV2 = 47;
	DexGavel = 48;
	DexBoopfunBuy = 49;
	DexBoopfunSell = 50;
	DexMeteoraDbc2 = 51;
	DexGooseFX = 52;
	DexDooar = 53;
	DexNumeraire = 54;
	DexSaberDecimalWrapperDeposit = 55;
	DexSaberDecimalWrapperWithdraw = 56;
	DexSarosDlmm = 57;
	DexOneDexSwap = 58;
	DexManifest = 59;
	DexByrealClmm = 60;
	DexPancakeSwapV3Swap = 61;
	DexPancakeSwapV3SwapV2 = 62;
	DexTessera = 63;
	DexSolRfq = 64;
	DexHumidifi = 65;
	DexHeavenBuy = 66;
	DexHeavenSell = 67;
	DexSolfiV2 = 68;
	DexGoonfi = 69;
	DexMoonitBuy = 70;
	DexMoonitSell = 71;
	DexRaydiumSwapV2 = 72;
}

message Route {
	Dex dex = 1;
	uint32 weight = 2;
	uint32 index = 3;
}

message SwapArgs {
	uint64 order_id = 1;
	uint64 amount_in = 2;
	uint64 expect_amount_out = 3;
	uint32 slippage = 4;
	repeated Route routes = 5;
}

message SwapCpiEvent {
	uint64 order_id = 1;
	string source_mint = 2;
	string destination_mint = 3;
	string source_token_account_owner = 4;
	string destination_token_account_owner = 5;
	uint64 source_token_change = 6;
	uint64 destination_token_change = 7;
}

message SwapEvent {
	Dex dex = 1;
	uint64 amount_in = 2;
	uint64 amount_out = 3;
}

message SwapWithFeesCpiEvent {
	uint64 order_id = 1;
	string source_mint = 2;
	string destination_mint = 3;
	string source_token_account_owner = 4;
	string destination_token_account_owner = 5;
	uint64 source_token_change = 6;
	uint64 destination_token_change = 7;
	bool commission_direction = 8;
	uint32 commission_rate = 9;
	uint64 commission_amount = 10;
	string commission_account = 11;
	uint32 platform_fee_rate = 12;
	uint64 platform_fee_amount = 13;
	string platform_fee_account = 14;
	uint32 trim_rate = 15;
	uint64 trim_amount = 16;
	string trim_account = 17;
}



message ClaimIxAccounts {
	string signer = 1;
	string receiver = 2;
	optional string source_token_account = 3;
	optional string destination_token_account = 4;
	string sa_authority = 5;
	optional string token_mint = 6;
	optional string token_program = 7;
	string system_program = 8;
	optional string associated_token_program = 9;
}


message CreateTokenAccountIxAccounts {
	string payer = 1;
	string owner = 2;
	string token_account = 3;
	string token_mint = 4;
	string token_program = 5;
	string system_program = 6;
}

message CreateTokenAccountIxData {
	uint32 bump = 1;
}

message CreateTokenAccountWithSeedIxAccounts {
	string payer = 1;
	string owner = 2;
	string token_account = 3;
	string token_mint = 4;
	string token_program = 5;
	string system_program = 6;
}

message CreateTokenAccountWithSeedIxData {
	uint32 bump = 1;
	uint32 seed = 2;
}

message ProxySwapIxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	optional string sa_authority = 6;
	optional string source_token_sa = 7;
	optional string destination_token_sa = 8;
	optional string source_token_program = 9;
	optional string destination_token_program = 10;
	optional string associated_token_program = 11;
	optional string system_program = 12;
	string event_authority = 13;
	string program = 14;
}

message ProxySwapIxData {
	SwapArgs args = 1;
}

message SwapIxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	string event_authority = 6;
	string program = 7;
}

message SwapIxData {
	SwapArgs args = 1;
}

message SwapTobIxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	optional string commission_account = 6;
	optional string platform_fee_account = 7;
	optional string sa_authority = 8;
	optional string source_token_sa = 9;
	optional string destination_token_sa = 10;
	optional string source_token_program = 11;
	optional string destination_token_program = 12;
	optional string associated_token_program = 13;
	optional string system_program = 14;
	string event_authority = 15;
	string program = 16;
}

message SwapTobIxData {
	SwapArgs args = 1;
	uint32 commission_info = 2;
	uint32 platform_fee_rate = 3;
	uint32 trim_rate = 4;
}

message SwapTobWithReceiverIxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	optional string commission_account = 6;
	optional string platform_fee_account = 7;
	optional string sa_authority = 8;
	optional string source_token_sa = 9;
	optional string destination_token_sa = 10;
	optional string source_token_program = 11;
	optional string destination_token_program = 12;
	optional string associated_token_program = 13;
	optional string system_program = 14;
	optional string sol_receiver = 15;
	string event_authority = 16;
	string program = 17;
}

message SwapTobWithReceiverIxData {
	SwapArgs args = 1;
	uint32 commission_info = 2;
	uint32 platform_fee_rate = 3;
	uint32 trim_rate = 4;
}

message SwapTocIxAccounts {
	string payer = 1;
	string source_token_account = 2;
	string destination_token_account = 3;
	string source_mint = 4;
	string destination_mint = 5;
	optional string commission_account = 6;
	optional string platform_fee_account = 7;
	optional string sa_authority = 8;
	optional string source_token_sa = 9;
	optional string destination_token_sa = 10;
	optional string source_token_program = 11;
	optional string destination_token_program = 12;
	optional string associated_token_program = 13;
	optional string system_program = 14;
	string event_authority = 15;
	string program = 16;
}

message SwapTocIxData {
	SwapArgs args = 1;
	uint32 commission_info = 2;
	uint32 platform_fee_rate = 3;
}

message WrapUnwrapIxAccounts {
	string payer = 1;
	string payer_wsol_account = 2;
	string wsol_mint = 3;
	optional string temp_wsol_account = 4;
	optional string commission_account = 5;
	optional string platform_fee_account = 6;
	optional string authority_pda = 7;
	optional string wsol_sa = 8;
	string token_program = 9;
	string system_program = 10;
	string event_authority = 11;
	string program = 12;
}

message WrapUnwrapIxData {
	uint64 order_id = 1;
	uint64 amount_in = 2;
	uint32 commission_info = 3;
	uint32 platform_fee_rate = 4;
	bool tob = 5;
}


message ProgramState {
    // No state accounts defined in this program
}

message ProgramIxs {
    oneof ix_oneof {
        	ClaimIx claim = 1;
        	CreateTokenAccountIx create_token_account = 2;
        	CreateTokenAccountWithSeedIx create_token_account_with_seed = 3;
        	ProxySwapIx proxy_swap = 4;
        	SwapIx swap = 5;
        	SwapTobIx swap_tob = 6;
        	SwapTobWithReceiverIx swap_tob_with_receiver = 7;
        	SwapTocIx swap_toc = 8;
        	WrapUnwrapIx wrap_unwrap = 9;
        }
}

